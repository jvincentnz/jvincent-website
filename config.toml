baseURL = "https://jeremyvincent.com/"
DefaultContentLanguage = "en"
title = "Jeremy Vincent's Website"
# Using theme as git submodule
theme = "beautifulhugo"
# Or when using theme as hugo module
# theme = "github.com/halogenica/beautifulhugo"
pygmentsUseClasses = true
pygmentsCodeFences = true
pygmentsCodefencesGuessSyntax = true
#pygmentsStyle = "monokai"
#pygmentsUseClassic = true
#pygmentsOptions = "linenos=table"
#disqusShortname = "XXX"
#googleAnalytics = "XXX"

enableGitInfo = true
[Params]
  commit = "https://github.com/jvincentnz/jvincent-website/tree/"
  # homeTitle = "Beautiful Hugo Theme" # Set a different text for the header on the home page
  # subtitle = "Build a beautiful and simple website in minutes"
  mainSections = ["post","posts"]
  # logo = "img/avatar-icon.png" # Expecting square dimensions
  # favicon = "img/favicon.ico"
  favicon = "favicon.ico"
  # dateFormat = "January 1, 2020"
  # commit = false
  rss = true
  # comments = true
  readingTime = true
  wordCount = true
  useHLJS = false
  socialShare = true
  # delayDisqus = true
  showRelatedPosts = true
  # hideAuthor = true
  # gcse = "012345678901234567890:abcdefghijk" # Get your code from google.com/cse. Make sure to go to "Look and Feel" and change Layout to "Full Width" and Theme to "Classic"
  # disclaimerText = "All opinions expressed are my own."


[[Params.Author]]
  name = "Jeremy Vincent"
  email = "jeremy.vincent@gmail.com"

[Author]
  # name = "Jeremy Vincent"
  website = "https://jeremyvincent.com/"
  # email = "jeremy.vincent@gmail.com"
  facebook = "jeremy.vincent.129794"
  github = "jvincentnz"
  #gitlab = "username"
  #bitbucket = "username"
  twitter = "jvincentnz"
  linkedin = "vincentjeremy"

[permalinks]
  posts = "/:year/:month/:title/"

[[menu.main]]
    name = "Blog"
    url = ""
    weight = 1

[[menu.main]]
    identifier = "resources"
    name = "Resources"
    weight = 2

[[menu.main]]
    parent = "resources"
    name = "new-ns-jeremyvincent.com.txt"
    url = "resources/publishing-a-static-site-with-aws/new-ns-jeremyvincent.com.txt"
    weight = 1

[[menu.main]]
    parent = "resources"
    name = "new-acm-jeremyvincent.com.txt"
    url = "resources/publishing-a-static-site-with-aws/new-acm-jeremyvincent.com.txt"
    weight = 2

[[menu.main]]
    name = "Tags"
    url = "tags"
    weight = 3

[[menu.main]]
    name = "About"
    url = "pages/about/"
    weight = 4

#[[menu.main]]
#    identifier = "samples"
#    name = "Samples"
#    weight = 2
#
#[[menu.main]]
#    parent = "samples"
#    name = "Publishing a Static Site with AWS"
#    url = "2020/09/publishing-a-static-site-with-aws/"
#    weight = 1
#
#[[menu.main]]
#    parent = "samples"
#    name = "Math Sample"
#    url = "post/2017-03-05-math-sample"
#    weight = 2


[deployment]
# By default, files are uploaded in an arbitrary order.
# Files that match the regular expressions in the "Order" list
# will be uploaded first, in the listed order.

order = [".png$", ".jpg$", ".gif$"]

[[deployment.targets]]
# S3; see https://gocloud.dev/howto/blob/#s3
# URL = "s3://<Bucket Name>?region=<AWS region>"
# If you are using a CloudFront CDN, deploy will invalidate the cache as needed.
# cloudFrontDistributionID = <ID>
# You can use a "prefix=" query parameter to target a subfolder of the bucket:
# URL = "gs://<Bucket Name>?prefix=a/subfolder/"

name = "main"
URL = "s3://jeremyvincent-production-us-east-1-jvincent-website/?region=us-east-1"
# cloudFrontDistributionID = <ID>

[[deployment.targets]]
name = "dev"
URL = "s3://jeremyvincent-production-us-east-1-jvincent-website?region=us-east-1"
# cloudFrontDistributionID = <ID>

# Optionally, you can include or exclude specific files.
# See https://godoc.org/github.com/gobwas/glob#Glob for the glob pattern syntax.
# If non-empty, the pattern is matched against the local path.
# All paths are matched against in their filepath.ToSlash form.
# If exclude is non-empty, and a local or remote file's path matches it, that file is not synced.
# If include is non-empty, and a local or remote file's path does not match it, that file is not synced.
# As a result, local files that don't pass the include/exclude filters are not uploaded to remote,
# and remote files that don't pass the include/exclude filters are not deleted.
# include = "**.html" # would only include files with ".html" suffix
# exclude = "**.{jpg, png}" # would exclude files with ".jpg" or ".png" suffix

# [[deployment.matchers]] configure behavior for files that match the Pattern.

[[deployment.matchers]]
# Cache static assets for 1 year with GZip compression.
pattern = "^.+\\.(js|css|svg|ttf|eot)$"
cacheControl = "max-age=31536000, no-transform, public"
#gzip = true
gzip = false

[[deployment.matchers]]
# Cache static assets for 1 year with no GZip compression.
pattern = "^.+\\.(png|jpg|gif|woff|woff2)$"
cacheControl = "max-age=31536000, no-transform, public"
gzip = false

[[deployment.matchers]]
pattern = "^.+\\.(html|xml|json)$"
#gzip = true
gzip = false

